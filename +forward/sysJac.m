function jacGen = sysJac(t, in2, full)
% System Jacobian (df_i/dy_j) of the deterministic part of the model
%
% This thing was first generated by MATLAB's symbolic math toolbox and
% then vectorized and modified.
% 
% Pars:
% t:                            simulation time
% in2 (102 * nPaths x 1 array): state of all dynamic variables and
%                               parameters in all cells
% full (logical):               if true, large jacobians for 
%                               i = 1,...,23 and j = 1,...,102 are 
%                               computed. Otherwise they are computed in
%                               reduced form for i = 1,...,23 and 
%                               j = 1,...,23.
%
% Return values:
% jacGen (32 * nPaths x 
%  N * nPaths sparse matrix):   system Jacobian. The size N depends on the
%                               input agument `full' (102 if true, 23 if 
%                               false).


nDet = 23;
nPData = 102;

nIn = length(in2);
assert(mod(nIn, nPData) == 0)

nPaths = nIn/nPData;

pI = (0:(nPaths-1)).' * nPData;
dI = (0:(nPaths-1)).' * nDet;

z = zeros(nPaths,1);

w1 = in2(pI+1);
w2 = in2(pI+2);
w3 = in2(pI+3);
w4 = in2(pI+4);
w5 = in2(pI+5);
w6 = in2(pI+6);
w7 = in2(pI+7);
w8 = in2(pI+8);
w9 = in2(pI+9);
w10 = in2(pI+10);
w11 = in2(pI+11);
w12 = in2(pI+12);
w13 = in2(pI+13);
w14 = in2(pI+14);
w15 = in2(pI+15);
w16 = in2(pI+16);
w17 = in2(pI+17);
w18 = in2(pI+18);
w19 = in2(pI+19);
w20 = in2(pI+20);
w21 = in2(pI+21);
w22 = in2(pI+22);
w23 = in2(pI+23);
w25 = in2(pI+25);
w28 = in2(pI+28);
w29 = in2(pI+29);
w31 = in2(pI+31);
w32 = in2(pI+32);
w34 = in2(pI+34);
w35 = in2(pI+35);
w36 = in2(pI+36);
w37 = in2(pI+37);
w38 = in2(pI+38);
w39 = in2(pI+39);
w40 = in2(pI+40);
w41 = in2(pI+41);
w44 = in2(pI+44);
w45 = in2(pI+45);
w47 = in2(pI+47);
w57 = in2(pI+57);
w58 = in2(pI+58);
w59 = in2(pI+59);
w60 = in2(pI+60);
w61 = in2(pI+61);
w62 = in2(pI+62);
w63 = in2(pI+63);
w64 = in2(pI+64);
w65 = in2(pI+65);
w66 = in2(pI+66);
w67 = in2(pI+67);
w68 = in2(pI+68);
w69 = in2(pI+69);
w70 = in2(pI+70);
w71 = in2(pI+71);
w72 = in2(pI+72);
w73 = in2(pI+73);
w74 = in2(pI+74);
w75 = in2(pI+75);
w76 = in2(pI+76);
w77 = in2(pI+77);

if full
    t6 = z+sparse(t.*1.0e2);
    t2 = z+sparse(-t6+1.0e1);
    t3 = z+sparse(exp(t2));
    t4 = z+sparse(t3+1.0e3);
    t5 = z+sparse(1.0./t4);
    t7 = sparse(w39.*w75);
    t8 = sparse(w10.*w75);
    t9 = sparse(w10.*w39);
    t10 = sparse(w40.*w60);
    t11 = sparse(w3.*w60);
    t12 = sparse(w3.*w40);
    t13 = sparse(w41.*w61);
    t14 = sparse(w4.*w61);
    t15 = sparse(w4.*w41);
    t16 = sparse(1.0./w63);
    t17 = sparse(1.0./w63.^2);
    t18 = sparse(w38.*w67);
    t19 = sparse(w10.*w67);
    t20 = sparse(w10.*w38);
    t21 = z+sparse(t5.*4.313701132e4);
    t22 = sparse(w11.^2);
    t23 = sparse(w14.*2.0);
    t24 = sparse(w12.*w64);
    t25 = sparse(w9.*w64);
    t26 = sparse(w28.*(1.0./2.0));
    t27 = sparse(w9.*w12);
    t28 = sparse(abs(w20));
    t29 = sparse(w36-1.0);
    t30 = sparse(t28.^t29);
    t31 = sparse(t28.^w36);
    t32 = sparse(sign(w20));
    t33 = sparse(abs(w25));
    t34 = sparse(t33.^w36);
    t35 = sparse(t31+t34);
    t36 = z+sparse(1.0./t35.^2);
    t37 = z+sparse(log(t28));
    t38 = z+sparse(1.0./t35);
    t39 = sparse(w18.*w73);
    t40 = sparse(w8.*w73);
    t41 = sparse(w8.*w18);
    t42 = sparse(w65.*2.0);
    t43 = sparse(w69.*2.0);
    t44 = sparse(w68.*2.0);
    t45 = sparse(w44.*w65.*3.0);
    t46 = z+sparse(t44+t45);
    t47 = sparse(w19.^2);
    t48 = sparse(w20.*2.0);
    t49 = sparse(w47.*w57);
    t50 = sparse(w20.*w57);
    t51 = sparse(w20.*w47);
    t52 = sparse(w34.*2.0);
    t53 = sparse(w15.*2.0);
    t54 = sparse(w29.*2.0);
    t55 = sparse(w19.*w23.*w74.*2.0);
    t56 = sparse(t47.*w74);
    t57 = sparse(t47.*w23);
    
    jacGen = sparse( ...
        [ dI + 1,  dI + 3,  dI + 7,  dI + 8,  dI + 2,  dI + 4,  dI + 5, ...
        dI + 7,  dI + 1,  dI + 3,  dI + 2,  dI + 4,  dI + 2,  dI + 5, ...
        dI + 7,  dI + 6,  dI + 1,  dI + 2,  dI + 5,  dI + 7,  dI + 8, ...
        dI + 1,  dI + 7,  dI + 8,  dI + 9,  dI + 10, dI + 18, dI + 3, ...
        dI + 4,  dI + 6,  dI + 9,  dI + 11, dI + 12, dI + 1,  dI + 2, ...
        dI + 6,  dI + 8,  dI + 10, dI + 18, dI + 11, dI + 13, dI + 14, ...
        dI + 15, dI + 19, dI + 11, dI + 12, dI + 22, dI + 11, dI + 13, ...
        dI + 14, dI + 23, dI + 11, dI + 13, dI + 14, dI + 20, dI + 11, ...
        dI + 15, dI + 21, dI + 16, dI + 18, dI + 16, dI + 17, dI + 8, ...
        dI + 10, dI + 18, dI + 11, dI + 19, dI + 20, dI + 21, dI + 22, ...
        dI + 23, dI + 17, dI + 19, dI + 20, dI + 22, dI + 23, dI + 19, ...
        dI + 21, dI + 12, dI + 22, dI + 13, dI + 19, dI + 20, dI + 23, ...
        dI + 17, dI + 11, dI + 12, dI + 19, dI + 22, dI + 11, dI + 12, ...
        dI + 19, dI + 22, dI + 13, dI + 23, dI + 13, dI + 23, dI + 14, ...
        dI + 15, dI + 20, dI + 21, dI + 16, dI + 17, dI + 17, dI + 8, ...
        dI + 9,  dI + 1,  dI + 6,  dI + 10, dI + 18, dI + 1,  dI + 2, ...
        dI + 10, dI + 18, dI + 1,  dI + 3,  dI + 2,  dI + 4,  dI + 11, ...
        dI + 15, dI + 19, dI + 21, dI + 11, dI + 15, dI + 19, dI + 21, ...
        dI + 19, dI + 20, dI + 22, dI + 23, dI + 19, dI + 20, dI + 22, ...
        dI + 23, dI + 18, dI + 3,  dI + 4,  dI + 6,  dI + 9,  dI + 1, ...
        dI + 3,  dI + 8,  dI + 9,  dI + 2,  dI + 4,  dI + 17, dI + 5, ...
        dI + 11, dI + 12, dI + 11, dI + 13, dI + 14, dI + 15, dI + 19, ...
        dI + 20, dI + 21, dI + 23, dI + 3,  dI + 4,  dI + 6,  dI + 9, ...
        dI + 1,  dI + 3,  dI + 4,  dI + 6,  dI + 9,  dI + 10, dI + 18, ...
        dI + 11, dI + 12, dI + 13, dI + 14, dI + 15, dI + 19, dI + 20, ...
        dI + 21, dI + 22, dI + 23, dI + 11, dI + 13, dI + 14, dI + 19, ...
        dI + 20, dI + 23, dI + 18, dI + 1,  dI + 7,  dI + 8,  dI + 2, ...
        dI + 5,  dI + 7,  dI + 8,  dI + 10, dI + 18, dI + 11, dI + 13, ...
        dI + 14, dI + 15, dI + 19, dI + 20, dI + 21, dI + 23, dI + 1, ...
        dI + 2,  dI + 3,  dI + 4,  dI + 6,  dI + 9,  dI + 10, dI + 18, ...
        dI + 17, dI + 16, dI + 17], ...
        [pI + 1, pI + 1, pI + 1, pI + 1, pI + 2, pI + 2, pI + 2, ...
        pI + 2, pI + 3, pI + 3, pI + 4, pI + 4, pI + 5, pI + 5, ...
        pI + 5, pI + 6, pI + 7, pI + 7, pI + 7, pI + 7, pI + 7, ...
        pI + 8, pI + 8, pI + 8, pI + 8, pI + 8, pI + 8, pI + 9, ...
        pI + 9, pI + 9, pI + 9, pI + 9, pI + 9, pI + 10, pI + 10, ...
        pI + 10, pI + 10, pI + 10, pI + 10, pI + 11, pI + 11, ...
        pI + 11, pI + 11, pI + 11, pI + 12, pI + 12, pI + 12, ...
        pI + 13, pI + 13, pI + 13, pI + 13, pI + 14, pI + 14, ...
        pI + 14, pI + 14, pI + 15, pI + 15, pI + 15, pI + 16, ...
        pI + 16, pI + 17, pI + 17, pI + 18, pI + 18, pI + 18, ...
        pI + 19, pI + 19, pI + 19, pI + 19, pI + 19, pI + 19, ...
        pI + 20, pI + 20, pI + 20, pI + 20, pI + 20, pI + 21, ...
        pI + 21, pI + 22, pI + 22, pI + 23, pI + 23, pI + 23, ...
        pI + 23, pI + 25, pI + 28, pI + 28, pI + 28, pI + 28, ...
        pI + 29, pI + 29, pI + 29, pI + 29, pI + 31, pI + 31, ...
        pI + 32, pI + 32, pI + 34, pI + 34, pI + 34, pI + 34, ...
        pI + 35, pI + 35, pI + 36, pI + 37, pI + 37, pI + 38, ...
        pI + 38, pI + 38, pI + 38, pI + 39, pI + 39, pI + 39, ...
        pI + 39, pI + 40, pI + 40, pI + 41, pI + 41, pI + 44, ...
        pI + 44, pI + 44, pI + 44, pI + 45, pI + 45, pI + 45, ...
        pI + 45, pI + 47, pI + 47, pI + 47, pI + 47, pI + 57, ...
        pI + 57, pI + 57, pI + 57, pI + 58, pI + 59, pI + 59, ...
        pI + 59, pI + 59, pI + 60, pI + 60, pI + 60, pI + 60, ...
        pI + 61, pI + 61, pI + 62, pI + 63, pI + 64, pI + 64, ...
        pI + 65, pI + 65, pI + 65, pI + 65, pI + 65, pI + 65, ...
        pI + 65, pI + 65, pI + 66, pI + 66, pI + 66, pI + 66, ...
        pI + 67, pI + 67, pI + 67, pI + 67, pI + 67, pI + 67, ...
        pI + 67, pI + 68, pI + 68, pI + 68, pI + 68, pI + 68, ...
        pI + 68, pI + 68, pI + 68, pI + 68, pI + 68, pI + 69, ...
        pI + 69, pI + 69, pI + 69, pI + 69, pI + 69, pI + 70, ...
        pI + 71, pI + 71, pI + 71, pI + 72, pI + 72, pI + 72, ...
        pI + 73, pI + 73, pI + 73, pI + 74, pI + 74, pI + 74, ...
        pI + 74, pI + 74, pI + 74, pI + 74, pI + 74, pI + 75, ...
        pI + 75, pI + 75, pI + 75, pI + 75, pI + 75, pI + 75, ...
        pI + 75, pI + 76, pI + 77, pI + 78], ...
        [-w60 - w7.*w71, w60, -w7.*w71, w7.*w71, ...
        -w61 - t5.*w5.*w72.*1.0e3, w61, t5.*t16.*w5.*w72.*-1.0e3, ...
        t5.*w5.*w72.*1.0e3, z + t10, -t10 - w66, z + t13, ...
        -t13 - w67, z + t5.*w2.*w72.*-1.0e3, ...
        t5.*t16.*w2.*w72.*-1.0e3, t5.*w2.*w72.*1.0e3, -w75, ...
        -w1.*w71, z + t21, z + t5.*t16.*4.313701132e4, ...
        -t21 - w1.*w71, w1.*w71, z + 8.0545738, z + 8.0545738, ...
        -w18.*w73 - w37.*w60 - 8.0545738, w37.*w60, z + t39, ...
        z - t39, w59 + w67 + w75, w59 + w66 + w75, w59 + w66 + w67, ...
        -w59 - w66 - w67 - w75, z + t24, z - t24, z + t7 + t18, ...
        z + t7, z + t18, z + 7.752016957482354e-4, ...
        z - t7 - t18 - 7.752016957482354e-4, ...
        z + t7 + t18 + 7.752016957482354e-4, ...
        -w29 - w68 - t22.*w45.*w74.*9.0 - w11.*w13.*w74.*4.0, ...
        w11.*w13.*w74.*-2.0, w11.*w13.*w74.*2.0, t22.*w45.*w74.*3.0, ...
        z + t54, z + t25, z - t25 - w29 - w68, z + t54, ...
        z + t22.*w74.*-2.0, -w32 - w69 - t22.*w74, t22.*w74, ...
        w32.*2.0, z + t42 + t43 + w68, w65 + w68, ...
        -w34 - w65 - w68 - w69, z + t52, z + t46, ...
        -w34 - w68 - w44.*w65, z + t52, -w77, w58, ...
        w35.*(1.0 ./ 2.0), -w35 - w76, -w8.*w73, z + t40, ...
        -t40 - w70, z + t26, ...
        -w28 - w57 - w68 - t47.*w45.*w74.*9.0 - w19.*w23.*w74.*4.0, ...
        z + t55, t47.*w45.*w74.*3.0, w57, z - t55, ...
        t30.*t32.*t38.*w36.*w62 - t30.*t31.*t32.*t36.*w36.*w62, ...
        t42 + t43 + t49 + w68, -t49 - w65 - w68 - w69, z + t49, ...
        t49 + w65 + w68, z + t46, -w68 - w44.*w65, z + t26, ...
        -w28 - w68, w31.*(1.0 ./ 2.0), t47.*w74.*-2.0, z + t56, ...
        z - t56 - w31 - w69, ...
        z - t31.*t33.^ t29.*t36.*w36.*w62.*sign(w25), ...
        w19.*(1.0 ./ 2.0), w22.*(1.0 ./ 2.0), -w19, -w22, -w11, ...
        -w12, w11.*2.0, w12.*2.0, w23.*(1.0 ./ 2.0), -w23, -w13, ...
        w13.*2.0, -w14, -w15, z + t23, z + t53, w17.*(1.0 ./ 2.0), ...
        -w17, ...
        z - t31.*t36.*w62.*(t31.*t37 + t34.*log(t33)) + ...
        t31.*t37.*t38.*w62, ...
        -w8.*w60, w8.*w60, z + t19, z + t19, z - t19, z + t19, ...
        z + t8, z + t8, z - t8, z + t8, t11, -t11, t14, -t14, ...
        w15.*w65.*3.0, -w15.*w65, w21.*w65.*3.0, -w21.*w65, ...
        t22.*w11.*w74.*-3.0, t22.*w11.*w74, t47.*w19.*w74.*-3.0, ...
        t47.*w19.*w74, t50, -t50, t50, t50, t51 - w19, -t51, ...
        t51 + w19, t51, w16, w9, w9, w9, -w9, t12 - w1, -t12 + w1, ...
        -w8.*w37, w8.*w37, t15 - w2, -t15 + w2, t31.*t38, ...
        t5.*t17.*w7.*(-4.313701132e4) + t5.*t17.*w2.*w5.*w72.*1.0e3, ...
        t27, -t27, t23 + w15.*w44.*3.0, w14, -w14, -w15.*w44, ...
        t48 + w21.*w44.*3.0, -w20, -w21.*w44, w20, -w3, w9, w9, -w9, ...
        t20, w9, -w4, t20 + w9, -w9, -t20, t20, t53 - w11 + w14, ...
        -w12, w14, -w14, -w15, -w19 + w20 + w21.*2.0, -w20, -w21, ...
        -w22, w20, t23, -w13, -w14, t48, -w20, -w23, -w18, -w1.*w7, ...
        -w1.*w7, w1.*w7, t5.*w2.*w5.*-1.0e3, ...
        t5.*t16.*w2.*w5.*-1.0e3, t5.*w2.*w5.*1.0e3, -w8.*w18, t41, ...
        -t41, t22.*w13.*-2.0 - t22.*w11.*w45.*3.0, -t22.*w13, ...
        t22.*w13, t22.*w11.*w45, ...
        t47.*w23.*-2.0 - t47.*w19.*w45.*3.0, t57, t47.*w19.*w45, ...
        -t57, t9, t9, w9, w9, -w6, -w9, -t9, t9, -w17, -w16, ...
        z + 1.0], ...
        23 * nPaths, 102 * nPaths);
else
    t6 = z + sparse(t.*1.0e2);
    t2 = z+sparse(-t6+1.0e1);
    t3 = z+sparse(exp(t2));
    t4 = z+sparse(t3+1.0e3);
    t5 = z+sparse(1.0./t4);
    t7 = sparse(w39.*w75);
    t8 = sparse(w40.*w60);
    t9 = sparse(w41.*w61);
    t10 = sparse(1.0./w63);
    t11 = sparse(w38.*w67);
    t12 = z+sparse(t5.*4.313701132e4);
    t13 = sparse(w11.^2);
    t14 = sparse(w12.*w64);
    t15 = sparse(w9.*w64);
    t16 = sparse(w28.*(1.0./2.0));
    t17 = sparse(abs(w20));
    t18 = sparse(w36-1.0);
    t19 = z+sparse(t17.^t18);
    t20 = sparse(t17.^w36);
    t21 = sparse(sign(w20));
    t22 = sparse(abs(w25));
    t23 = sparse(t22.^w36);
    t24 = z+sparse(t20+t23);
    t25 = sparse(w18.*w73);
    t26 = sparse(w8.*w73);
    t27 = sparse(w65.*2.0);
    t28 = sparse(w69.*2.0);
    t29 = sparse(w68.*2.0);
    t30 = sparse(w44.*w65.*3.0);
    t31 = z+sparse(t29+t30);
    t32 = sparse(w19.^2);
    t33 = sparse(w47.*w57);
    t34 = sparse(w34.*2.0);
    t35 = sparse(w29.*2.0);
    t36 = sparse(w19.*w23.*w74.*2.0);
    t37 = sparse(t32.*w74);
    
    jacGen = sparse( ...
        [ dI + 1,  dI + 3,  dI + 7,  dI + 8,  dI + 2,  dI + 4, ...
        dI + 5,  dI + 7,  dI + 1,  dI + 3,  dI + 2,  dI + 4, ...
        dI + 2,  dI + 5,  dI + 7,  dI + 6,  dI + 1,  dI + 2, ...
        dI + 5,  dI + 7,  dI + 8,  dI + 1,  dI + 7,  dI + 8, ...
        dI + 9,  dI + 10, dI + 18, dI + 3,  dI + 4,  dI + 6, ...
        dI + 9,  dI + 11, dI + 12, dI + 1,  dI + 2,  dI + 6, ...
        dI + 8,  dI + 10, dI + 18, dI + 11, dI + 13, dI + 14, ...
        dI + 15, dI + 19, dI + 11, dI + 12, dI + 22, dI + 11, ...
        dI + 13, dI + 14, dI + 23, dI + 11, dI + 13, dI + 14, ...
        dI + 20, dI + 11, dI + 15, dI + 21, dI + 16, dI + 18, ...
        dI + 16, dI + 17, dI + 8,  dI + 10, dI + 18, dI + 11, ...
        dI + 19, dI + 20, dI + 21, dI + 22, dI + 23, dI + 17, ...
        dI + 19, dI + 20, dI + 22, dI + 23, dI + 19, dI + 21, ...
        dI + 12, dI + 22, dI + 13, dI + 19, dI + 20, dI + 23], ...
        [dI + 1, dI + 1, dI + 1, dI + 1, dI + 2, dI + 2, dI + 2, ...
        dI + 2, dI + 3, dI + 3, dI + 4, dI + 4, dI + 5, dI + 5, ...
        dI + 5, dI + 6, dI + 7, dI + 7, dI + 7, dI + 7, dI + 7, ...
        dI + 8, dI + 8, dI + 8, dI + 8, dI + 8, dI + 8, dI + 9, ...
        dI + 9, dI + 9, dI + 9, dI + 9, dI + 9, dI + 10, dI + 10, ...
        dI + 10, dI + 10, dI + 10, dI + 10, dI + 11, dI + 11, ...
        dI + 11, dI + 11, dI + 11, dI + 12, dI + 12, dI + 12, ...
        dI + 13, dI + 13, dI + 13, dI + 13, dI + 14, dI + 14, ...
        dI + 14, dI + 14, dI + 15, dI + 15, dI + 15, dI + 16, ...
        dI + 16, dI + 17, dI + 17, dI + 18, dI + 18, dI + 18, ...
        dI + 19, dI + 19, dI + 19, dI + 19, dI + 19, dI + 19, ...
        dI + 20, dI + 20, dI + 20, dI + 20, dI + 20, dI + 21, ...
        dI + 21, dI + 22, dI + 22, dI + 23, dI + 23, dI + 23, ...
        dI + 23], ...
        [-w60 - w7.*w71, w60, -w7.*w71, w7.*w71, ...
        -w61 - t5.*w5.*w72.*1.0e3, w61, t5.*t10.*w5.*w72.*-1.0e3, ...
        t5.*w5.*w72.*1.0e3, t8, -t8 - w66, t9, -t9 - w67, ...
        t5.*w2.*w72.*-1.0e3, t5.*t10.*w2.*w72.*-1.0e3, ...
        t5.*w2.*w72.*1.0e3, -w75, -w1.*w71, t12, ...
        t5.*t10.*4.313701132e4, -t12 - w1.*w71, w1.*w71, ...
        z + 8.0545738, z + 8.0545738, ...
        -w18.*w73 - w37.*w60 - 8.0545738, w37.*w60, t25, -t25, ...
        w59 + w67 + w75, w59 + w66 + w75, w59 + w66 + w67, ...
        -w59 - w66 - w67 - w75, t14, -t14, t7 + t11, t7, t11, ...
        z + 7.752016957482354e-4, -t7 - t11 - 7.752016957482354e-4, ...
        t7 + t11 + 7.752016957482354e-4, ...
        -w29 - w68 - t13.*w45.*w74.*9.0 - w11.*w13.*w74.*4.0, ...
        w11.*w13.*w74.*-2.0, w11.*w13.*w74.*2.0, t13.*w45.*w74.*3.0, ...
        t35, t15, -t15 - w29 - w68, t35, t13.*w74.*-2.0, ...
        -w32 - w69 - t13.*w74, t13.*w74, w32.*2.0, t27 + t28 + w68, ...
        w65 + w68, -w34 - w65 - w68 - w69, t34, t31, ...
        -w34 - w68 - w44.*w65, t34, -w77, w58, w35.*(1.0 ./ 2.0), ...
        -w35 - w76, -w8.*w73, t26, -t26 - w70, t16, ...
        -w28 - w57 - w68 - t32.*w45.*w74.*9.0 - w19.*w23.*w74.*4.0, ...
        t36, t32.*w45.*w74.*3.0, w57, -t36, ...
        (t19.*t21.*w36.*w62)./ t24 ...
        - t19.*t20.*t21.*1.0 ./ t24.^2 .* w36.*w62, ...
        t27 + t28 + t33 + w68, -t33 - w65 - w68 - w69, t33, ...
        t33 + w65 + w68, t31, -w68 - w44.*w65, t16, -w28 - w68, ...
        w31.*(1.0 ./ 2.0), t32.*w74.*-2.0, t37, -t37 - w31 - w69], ...
        nPaths * 23, nPaths * 23);
end
end
